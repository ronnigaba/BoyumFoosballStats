﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.LightGbm;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace BoyumFoosballStats_Ai
{
    public partial class MatchOutcomeModel
    {
        public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
        {
            var pipeline = BuildPipeline(context);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@"GrayDefender", @"GrayDefender"),new InputOutputColumnPair(@"GrayAttacker", @"GrayAttacker"),new InputOutputColumnPair(@"BlackDefender", @"BlackDefender"),new InputOutputColumnPair(@"BlackAttacker", @"BlackAttacker")})      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"GrayDefender",@"GrayAttacker",@"BlackDefender",@"BlackAttacker"}))      
                                    .Append(mlContext.Regression.Trainers.LightGbm(new LightGbmRegressionTrainer.Options(){NumberOfLeaves=4,MinimumExampleCountPerLeaf=6,NumberOfIterations=6,MaximumBinCountPerFeature=228,LearningRate=1F,LabelColumnName=@"Winner",FeatureColumnName=@"Features",Booster=new GradientBooster.Options(){SubsampleFraction=0.991467762331217F,FeatureFraction=0.762811146848443F,L1Regularization=2.45163185692807E-09F,L2Regularization=1.94317120113604E-05F}}));

            return pipeline;
        }
    }
}
